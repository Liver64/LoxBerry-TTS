#!/usr/bin/perl
# ================================================================
# daemon â€“ Watchdog/Bootstrap
#  - creates mqtt-watchdog.log
#  - sets owner/permissions for loxberry (ACL optional)
#  - LOGSTART once per boot
#  - delegates service orchestration to set_role.pl --start-services
# ================================================================

use strict;
use warnings;
use LoxBerry::System;
use LoxBerry::Log;
use File::Path qw(make_path);

my $pluginlogfile    = "mqtt-watchdog.log";
my $WD_MARKER        = "/run/shm/text2speech.watchdog.started";

# Pfad zu set_role.pl (anpassen, falls bei dir anders):
#my $ROLE_HANDLER_DIR  = "REPLACELBHOMEDIR/bin/plugins/text2speech";
#my $ROLE_HANDLER_FILE = "set_role.pl";
#my $ROLE_HANDLER_PATH = "$ROLE_HANDLER_DIR/$ROLE_HANDLER_FILE";

# --- LoxBerry Log init ---
my $log = LoxBerry::Log->new(
    name     => 'Watchdog',
    filename => "REPLACELBHOMEDIR/log/plugins/text2speech/$pluginlogfile",
    append   => 1,
    addtime  => 1
);

if ($log->loglevel() eq "7") {
    $LoxBerry::System::DEBUG = 1;
    $LoxBerry::Log::DEBUG    = 1;
}

# Optional: ACL setzen
if (system("command -v setfacl >/dev/null 2>&1") == 0) {
    system("setfacl -m u:loxberry:rw REPLACELBHOMEDIR/log/plugins/text2speech/$pluginlogfile 2>/dev/null");
}

# LOGSTART nur einmal pro Boot
unless (-f $WD_MARKER) {
    if (open my $fh, '>', $WD_MARKER) {
        print $fh time;
        close $fh;
    }
    LOGSTART("Watchdog started"); 
} else {
    LOGINF("Watchdog already started this boot (marker exists)");
}

exit 0;
